---
interface DropdownProps {
  title: string;
}

const { title } = Astro.props as DropdownProps;

const envieItems = [
  { title: "Solo", href: "/envie/markdown-style-guide" },
  { title: "A deux", href: "/envie/second-post" },
  { title: "Culture", href: "/envie/third-post" },
  { title: "Nature", href: "/envie/using-mdx" }
];
---
  <ul>
    <li class="relative dropdown">
      <a href="#" class="dropdown-toggle">
        {title} â–¼
      </a>
      <ul class="dropdown-menu">
        {envieItems.map((item) => (
          <li>
            <a href={item.href} class="dropdown-link">
              {item.title}
            </a>
          </li>
        ))}
      </ul>
    </li>
  </ul>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.dropdown').forEach((dropdown) => {
      const toggle = dropdown.querySelector('.dropdown-toggle');
      const menu = dropdown.querySelector('.dropdown-menu');

      toggle?.addEventListener('click', (e) => {
        e.preventDefault();
        menu?.classList.toggle('show');
      });

      window.addEventListener('click', (e) => {
        if (!dropdown.contains(e.target as Node)) {
          menu?.classList.remove('show');
        }
      });
    });
  });
</script>

<style>
  .dropdown-toggle {
    display: inline-block;
    padding: 8px 16px;
    text-decoration: none;
    color: white;
    cursor: pointer;
  }

  .dropdown-toggle:hover {
    text-decoration: underline;
  }

  .dropdown {
  position: relative; /* indispensable */
}

.dropdown-menu {
  display: none;
  position: absolute;
  top: 100%; /* juste en dessous du lien */
  left: 0;
  width: 192px;
  background-color: white;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  border-radius: 6px;
  z-index: 50;
  padding: 0;
}

.dropdown-menu.show {
  display: block;
}
  .dropdown-link {
    display: block;
    padding: 8px 16px;
    font-size: 14px;
    color: black;
    text-decoration: none;
  }

  .dropdown-link:hover {
    background-color: #f3f3f3;
  }
</style>
